<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nf147.sss.dao.CommonDAO">
    <sql id="sql1"></sql>

    <resultMap id="rmAuthor" type="author">
        <!--<id property="id" column="id" />-->
        <!--<result property="name" column="name" />-->
        <result property="city" column="chengshi" />
    </resultMap>

    <select id="selectAll" resultMap="rmAuthor">
        select
          id,
          name,
          chengshi
        from sss_author
    </select>

    <resultMap id="rmBlog" type="blog">
        <!--基本的数据类型，使用 id/result-->

        <constructor>
            <idArg column="id" javaType="int" />
            <arg column="title" javaType="string" />
            <arg column="content" javaType="string" />
        </constructor>

        <!--<id property="id" column="id" />-->
        <!--<result property="title" column="title" />-->
        <!--<result property="content" column="content" />-->

        <!--association 表示的是 has One 的关系-->

        <!--第一种方式：nested select-->
        <association property="author" javaType="author"
            column="author_id" select="com.nf147.sss.dao.CommonDAO.selectAuthorById" />

        <!--第二种方式，nested resultMap-->
        <!--
        <association property="author" javaType="author">
            <id property="id" column="author_id" />
            <result property="name" column="author_name" />
            <result property="city" column="author_city" />
        </association>
        -->

        <!--
        <association property="author" javaType="author" columnPrefix="author_">
            <id property="id" column="id" />
            <result property="name" column="name" />
            <result property="city" column="city" />
        </association>
        -->

        <!--<association property="author" javaType="author" columnPrefix="author_" resultMap="a2" />-->

        <!--Collection 表示的是 Has Many 的关系-->
        <!--
        <collection property="comments" ofType="comment" columnPrefix="comment_">
            <id property="id" column="id" />
            <result property="body" column="body" />
        </collection>
        -->

        <collection property="comments" ofType="comment"
                    column="id" select="com.nf147.sss.dao.CommonDAO.selectCommentsOfBlog" />
    </resultMap>

    <resultMap id="rmBlogNestedSelect" type="blog">
        <id property="id" column="id" />
        <result property="title" column="title" />
        <result property="content" column="content" />
        <association property="author" javaType="author"
                     column="author_id" select="com.nf147.sss.dao.CommonDAO.selectAuthorById" />
        <collection property="comments" ofType="comment"
                    column="id" select="com.nf147.sss.dao.CommonDAO.selectCommentsOfBlog" />
    </resultMap>

    <resultMap id="a2" type="author">
        <id property="id" column="id" />
        <result property="name" column="name" />
        <result property="city" column="city" />
    </resultMap>

    <select id="selectAuthorById" resultType="author">
        select id, name, city from sss_author where id=#{id}
    </select>

    <select id="selectCommentsOfBlog" resultType="comment">
        select id, body from sss_comment where blog_id = #{id}
    </select>

    <select id="selectBlogs" resultMap="rmBlog">
        select
          b.id         as id,
          b.title      as title,
          b.content    as content,
          a.id         as author_id,
          a.name       as author_name,
          a.city       as author_city,
          c.id         as comment_id,
          c.body       as comment_body
        from
          sss_blog b
          left join sss_author a on b.author_id = a.id
          left join sss_comment c on c.blog_id = b.id
    </select>

    <select id="selectBlogsNestedSelect" resultMap="rmBlogNestedSelect">
        select
          id, title, content, author_id
        from
          sss_blog
    </select>

    <insert id="insertAuthor" useGeneratedKeys="false" keyProperty="id" keyColumn="id">
        <selectKey keyProperty="id" resultType="int" order="BEFORE">
            select floor(rand()*1000)
        </selectKey>
        insert into sss_author (id, name, city) values (#{id}, #{name}, #{city})
    </insert>
    <update id="updateBlog">
        update sss_blog set content = #{content} where id = #{id}
    </update>
    <update id="updateBlog2" parameterType="blog" databaseId="oracle">
        update sss_blog set content = #{content} where id = #{id} and 1=1
    </update>
    <update id="updateBlog2" parameterType="blog" databaseId="mysql">
        update sss_blog set content = #{content} where id = #{id}
    </update>
    <update id="updateBlog3" statementType="CALLABLE">
        update sss_blog set content = #{content} where id = #{id}
    </update>
    <delete id="ddd" />
</mapper>